#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2013, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# This script is used to remove a VM image (SRC) from the image repository
###############################################################################

# ------------ Set up the environment to source common tools ------------
if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/iscsi.conf

# -------- Get rm and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/IMAGE/SOURCE \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/VG_NAME \
					/DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/DATASET_NAME \
					/DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/VBD_TYPE)

SRC="${XPATH_ELEMENTS[j++]}"
BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"
VG_NAME="${XPATH_ELEMENTS[j++]:-$VG_NAME}"
DATASET_NAME="${XPATH_ELEMENTS[j++]:-$DATASET_NAME}"
VBD_TYPE="${XPATH_ELEMENTS[j++]:-$VBD_TYPE}"

DST_HOST=`get_destination_host $ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

DEV=""
RM_COMMAND=""

if [ "$VBD_TYPE" = "lvm" ]
then
	BASE_IQN=`echo $SRC|$CUT -d: -f1`
	TARGET=`echo $SRC|$CUT -d: -f2`
	LV_NAME=`echo $TARGET|$AWK -F. '{print $(NF)}'`
	VG_NAME=`echo $TARGET|$AWK -F. '{print $(NF-1)}'`
	DEV="/dev/$VG_NAME/$LV_NAME"
	IQN="$BASE_IQN:$DST_HOST.$VG_NAME.$LV_NAME"
	RM_COMMAND=$(cat <<EOF
		set -e
		TID=\$($SUDO $(tgtadm_get_tid_for_iqn "$IQN"))
		$SUDO $(tgtadm_target_delete "\$TID")
		$SUDO $SYNC
		$SUDO $LVREMOVE -f $VG_NAME/$LV_NAME
		$SUDO $(tgt_admin_dump_config "$TARGET_CONF")
	EOF
	)
elif [ "$VBD_TYPE" = "zfs" ]
then
	BASE_IQN=`echo $SRC|$CUT -d: -f1`
	TARGET=`echo $SRC|$CUT -d: -f2`
	LV_NAME=`echo $TARGET|$AWK -F. '{print $(NF)}'`
	_DATASET_NAME=`echo $TARGET|$AWK -F. '{print $(NF-1)}'`
	IQN="$BASE_IQN:$DST_HOST.$_DATASET_NAME.$LV_NAME"
	DEV="/$DATASET_NAME/$LV_NAME"
	RM_COMMAND=$(cat <<EOF
		set -e
		TID=\$($SUDO $(tgtadm_get_tid_for_iqn "$IQN"))
		$SUDO $(tgtadm_target_delete "\$TID")
		$SUDO $SYNC
		$SUDO zfs destroy $DATASET_NAME/$LV_NAME
		$SUDO $(tgt_admin_dump_config "$TARGET_CONF")
	EOF
	)
fi

log "Removing $DST_HOST:$DEV from the image repository"

ssh_exec_and_log "$DST_HOST" "$RM_COMMAND" \
    "Error removing $DST_HOST:$DEV"

exit 0
