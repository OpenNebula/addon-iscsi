#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2013, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# This script is used to copy a VM image (SRC) to the image repository as DST
# Several SRC types are supported
###############################################################################
# -------- Set up the environment to source common tools & conf ------------
if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/iscsi.conf

# -------- Get cp and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/BASE_PATH \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/RESTRICTED_DIRS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/SAFE_DIRS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/VG_NAME \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/DATASET_NAME \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/VBD_TYPE \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BASE_IQN \
                    /DS_DRIVER_ACTION_DATA/IMAGE/PATH \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SIZE)

BASE_PATH="${XPATH_ELEMENTS[j++]}"
RESTRICTED_DIRS="${XPATH_ELEMENTS[j++]}"
SAFE_DIRS="${XPATH_ELEMENTS[j++]}"
BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"
VG_NAME="${XPATH_ELEMENTS[j++]:-$VG_NAME}"
DATASET_NAME="${XPATH_ELEMENTS[j++]:-$DATASET_NAME}"
VBD_TYPE="${XPATH_ELEMENTS[j++]:-$VBD_TYPE}"
BASE_IQN="${XPATH_ELEMENTS[j++]:-$BASE_IQN}"
SRC="${XPATH_ELEMENTS[j++]}"
SIZE="${XPATH_ELEMENTS[j++]}"

DST_HOST=`get_destination_host $ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

# Check if 'TGTSETUPLUN' is installed
tgt_setup_lun_install "$DST_HOST" "$BASE_PATH"

set_up_datastore "$BASE_PATH" "$RESTRICTED_DIRS" "$SAFE_DIRS"

LV_NAME="lv-one-${ID}"

if [ "$VBD_TYPE" = "lvm" ]
then
    IQN="$BASE_IQN:$DST_HOST.$VG_NAME.$LV_NAME"
    DEV="/dev/$VG_NAME/$LV_NAME"

    LV_SRC=$(echo $SRC|awk -F. '{print $NF}')
    DEV_SRC="/dev/$VG_NAME/$LV_SRC"

    CLONE_CMD=$(cat <<EOF
        set -e
        $SUDO $LVCREATE -L${SIZE}M ${VG_NAME} -n ${LV_NAME}
        $SUDO $DD if=$DEV_SRC of=$DEV bs=2M

        $SUDO $(tgt_setup_lun "$IQN" "$DEV")
        $SUDO $(tgt_admin_dump_config "$TARGET_CONF")
EOF
)
elif [ "$VBD_TYPE" = "zfs" ]
then
    _DATASET_NAME=$(echo $DATASET_NAME | awk -F'/' '{out=$1; for(i=2;i<=NF;i++){out=out"-"$i}; print out}')
    IQN="$BASE_IQN:$DST_HOST.$_DATASET_NAME.$LV_NAME"
    LV_SRC=$(echo $SRC|awk -F. '{print $NF}')
    DEV="/dev/zvol/$DATASET_NAME/$LV_NAME"
    DEV_SRC="/dev/zvol/$DATASET_NAME/$LV_SRC"
    CLONE_CMD=$(cat <<EOF
        set -e
        $SUDO /sbin/zfs create -V ${SIZE}M ${DATASET_NAME}/${LV_NAME}
        $SUDO $DD if=$DEV_SRC of=$DEV bs=2M
        $SUDO $(tgt_setup_lun "$IQN" "$DEV")
        $SUDO $(tgt_admin_dump_config "$TARGET_CONF")
EOF
)
fi
ssh_exec_and_log "$DST_HOST" "$CLONE_CMD" \
    "Error cloning $DEV_SRC to $DEV in $DST_HOST"

echo "$IQN"
